{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.52.8",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@group",
          "syntaxKind": "block"
        }
      ],
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@contember/react-ui-lib!",
  "docComment": "",
  "name": "@contember/react-ui-lib",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@contember/react-ui-lib!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!Toast:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Toast: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToastPrimitives.ToastProps",
              "canonicalReference": "@radix-ui/react-toast!ToastProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLLIElement",
              "canonicalReference": "!HTMLLIElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n} & {\n    variant?: \"error\" | \"success\" | \"warning\" | \"info\" | null | undefined;\n}, \"ref\"> & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLLIElement",
              "canonicalReference": "!HTMLLIElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/toast/toast.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Toast",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!ToastAction:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ToastAction: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToastPrimitives.ToastActionProps",
              "canonicalReference": "@radix-ui/react-toast!ToastActionProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLButtonElement",
              "canonicalReference": "!HTMLButtonElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n}, \"ref\"> & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLButtonElement",
              "canonicalReference": "!HTMLButtonElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/toast/toast.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ToastAction",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@contember/react-ui-lib!ToastContent:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ToastContent: ({ title, children, action, details }: "
            },
            {
              "kind": "Content",
              "text": "{\n    title?: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    action?: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    details?: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            }
          ],
          "fileUrlPath": "src/toast/toast.tsx",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ title, children, action, details }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 10
              },
              "isOptional": false
            }
          ],
          "name": "ToastContent"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contember/react-ui-lib!ToastData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToastData "
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "releaseTag": "Public",
          "name": "ToastData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contember/react-ui-lib!ToastData#content:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "content: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "content",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contember/react-ui-lib!ToastData#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contember/react-ui-lib!ToastData#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "ToastType",
                  "canonicalReference": "@contember/react-ui-lib!ToastType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!ToastDescription:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ToastDescription: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToastPrimitives.ToastDescriptionProps",
              "canonicalReference": "@radix-ui/react-toast!ToastDescriptionProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n}, \"ref\"> & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/toast/toast.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ToastDescription",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@contember/react-ui-lib!Toaster:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function Toaster({ children }: "
            },
            {
              "kind": "Content",
              "text": "{\n    children: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/toast/toast.tsx",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "Toaster"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contember/react-ui-lib!ToasterMethods:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToasterMethods "
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "releaseTag": "Public",
          "name": "ToasterMethods",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@contember/react-ui-lib!ToasterMethods#clear:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "clear"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@contember/react-ui-lib!ToasterMethods#showToast:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showToast(content: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "ToastOptions",
                  "canonicalReference": "@contember/react-ui-lib!ToastOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ToastMethods",
                  "canonicalReference": "@contember/react-ui-lib!ToastMethods:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "content",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "showToast"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!ToasterMethodsContext:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ToasterMethodsContext: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "@types/react!React.Context:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToasterMethods",
              "canonicalReference": "@contember/react-ui-lib!ToasterMethods:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ToasterMethodsContext",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@contember/react-ui-lib!ToasterProvider:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ToasterProvider: ({ children }: "
            },
            {
              "kind": "Content",
              "text": "{\n    children: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "ToasterProvider"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contember/react-ui-lib!ToasterState:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToasterState "
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "releaseTag": "Public",
          "name": "ToasterState",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contember/react-ui-lib!ToasterState#toasts:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toasts: "
                },
                {
                  "kind": "Reference",
                  "text": "ToastData",
                  "canonicalReference": "@contember/react-ui-lib!ToastData:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toasts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!ToasterStateContext:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ToasterStateContext: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "@types/react!React.Context:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToasterState",
              "canonicalReference": "@contember/react-ui-lib!ToasterState:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ToasterStateContext",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contember/react-ui-lib!ToastMethods:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToastMethods "
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "releaseTag": "Public",
          "name": "ToastMethods",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@contember/react-ui-lib!ToastMethods#dismiss:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dismiss(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "dismiss"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@contember/react-ui-lib!ToastMethods#updateContent:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateContent(content: "
                },
                {
                  "kind": "Reference",
                  "text": "ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "content",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "updateContent"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@contember/react-ui-lib!ToastOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToastOptions "
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "releaseTag": "Public",
          "name": "ToastOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contember/react-ui-lib!ToastOptions#dismiss:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dismiss?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dismiss",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@contember/react-ui-lib!ToastOptions#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Reference",
                  "text": "ToastType",
                  "canonicalReference": "@contember/react-ui-lib!ToastType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!ToastTitle:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ToastTitle: "
            },
            {
              "kind": "Reference",
              "text": "React.ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToastPrimitives.ToastTitleProps",
              "canonicalReference": "@radix-ui/react-toast!ToastTitleProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n}, \"ref\"> & "
            },
            {
              "kind": "Reference",
              "text": "React.RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/toast/toast.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ToastTitle",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@contember/react-ui-lib!ToastType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ToastType = "
            },
            {
              "kind": "Content",
              "text": "'success' | 'error' | 'warning' | 'info'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "releaseTag": "Public",
          "name": "ToastType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@contember/react-ui-lib!useShowToast:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useShowToast: () => "
            },
            {
              "kind": "Content",
              "text": "(content: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "ToastOptions",
              "canonicalReference": "@contember/react-ui-lib!ToastOptions:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "ToastMethods",
              "canonicalReference": "@contember/react-ui-lib!ToastMethods:interface"
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useShowToast"
        },
        {
          "kind": "Function",
          "canonicalReference": "@contember/react-ui-lib!useToasterMethods:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useToasterMethods: () => "
            },
            {
              "kind": "Reference",
              "text": "ToasterMethods",
              "canonicalReference": "@contember/react-ui-lib!ToasterMethods:interface"
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useToasterMethods"
        },
        {
          "kind": "Function",
          "canonicalReference": "@contember/react-ui-lib!useToasterState:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useToasterState: () => "
            },
            {
              "kind": "Reference",
              "text": "ToasterState",
              "canonicalReference": "@contember/react-ui-lib!ToasterState:interface"
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useToasterState"
        },
        {
          "kind": "Function",
          "canonicalReference": "@contember/react-ui-lib!useToasts:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useToasts: () => "
            },
            {
              "kind": "Reference",
              "text": "ToastData",
              "canonicalReference": "@contember/react-ui-lib!ToastData:interface"
            },
            {
              "kind": "Content",
              "text": "[]"
            }
          ],
          "fileUrlPath": "src/toast/toaster.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useToasts"
        }
      ]
    }
  ]
}
