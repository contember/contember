{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.52.8",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@group",
          "syntaxKind": "block"
        }
      ],
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@contember/react-ui-lib!",
  "docComment": "",
  "name": "@contember/react-ui-lib",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@contember/react-ui-lib!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@contember/react-ui-lib!BaseFileViewProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BaseFileViewProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    baseField?: "
            },
            {
              "kind": "Reference",
              "text": "SugaredRelativeSingleEntity",
              "canonicalReference": "@contember/react-ui-lib!~SugaredRelativeSingleEntity:interface"
            },
            {
              "kind": "Content",
              "text": "['field'];\n    actions?: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    edit?: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    noDestroy?: boolean;\n    DestroyAction?: "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n        children: "
            },
            {
              "kind": "Reference",
              "text": "ReactElement",
              "canonicalReference": "@types/react!React.ReactElement:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    }>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/upload/view.tsx",
          "releaseTag": "Public",
          "name": "BaseFileViewProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploadedAnyView:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploadedAnyView: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "NamedExoticComponent",
              "canonicalReference": "@types/react!React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UploadedAnyViewProps",
              "canonicalReference": "@contember/react-ui-lib!UploadedAnyViewProps:type"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "src/upload/view.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploadedAnyView",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@contember/react-ui-lib!UploadedAnyViewProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type UploadedAnyViewProps = "
            },
            {
              "kind": "Reference",
              "text": "FileUrlDataExtractorProps",
              "canonicalReference": "@contember/react-ui-lib!~FileUrlDataExtractorProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "GenericFileMetadataExtractorProps",
              "canonicalReference": "@contember/react-ui-lib!~GenericFileMetadataExtractorProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "BaseFileViewProps",
              "canonicalReference": "@contember/react-ui-lib!BaseFileViewProps:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/upload/view.tsx",
          "releaseTag": "Public",
          "name": "UploadedAnyViewProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploadedAudioView:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploadedAudioView: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "NamedExoticComponent",
              "canonicalReference": "@types/react!React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UploadedAudioViewProps",
              "canonicalReference": "@contember/react-ui-lib!UploadedAudioViewProps:type"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "src/upload/view.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploadedAudioView",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@contember/react-ui-lib!UploadedAudioViewProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type UploadedAudioViewProps = "
            },
            {
              "kind": "Reference",
              "text": "FileUrlDataExtractorProps",
              "canonicalReference": "@contember/react-ui-lib!~FileUrlDataExtractorProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "GenericFileMetadataExtractorProps",
              "canonicalReference": "@contember/react-ui-lib!~GenericFileMetadataExtractorProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "AudioFileDataExtractorProps",
              "canonicalReference": "@contember/react-ui-lib!~AudioFileDataExtractorProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "BaseFileViewProps",
              "canonicalReference": "@contember/react-ui-lib!BaseFileViewProps:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/upload/view.tsx",
          "releaseTag": "Public",
          "name": "UploadedAudioViewProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploadedImageView:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploadedImageView: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "NamedExoticComponent",
              "canonicalReference": "@types/react!React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UploadedImageViewProps",
              "canonicalReference": "@contember/react-ui-lib!UploadedImageViewProps:type"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "src/upload/view.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploadedImageView",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@contember/react-ui-lib!UploadedImageViewProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type UploadedImageViewProps = "
            },
            {
              "kind": "Reference",
              "text": "FileUrlDataExtractorProps",
              "canonicalReference": "@contember/react-ui-lib!~FileUrlDataExtractorProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "GenericFileMetadataExtractorProps",
              "canonicalReference": "@contember/react-ui-lib!~GenericFileMetadataExtractorProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "ImageFileDataExtractorProps",
              "canonicalReference": "@contember/react-ui-lib!~ImageFileDataExtractorProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "BaseFileViewProps",
              "canonicalReference": "@contember/react-ui-lib!BaseFileViewProps:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/upload/view.tsx",
          "releaseTag": "Public",
          "name": "UploadedImageViewProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploadedVideoView:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploadedVideoView: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "NamedExoticComponent",
              "canonicalReference": "@types/react!React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UploadedVideoViewProps",
              "canonicalReference": "@contember/react-ui-lib!UploadedVideoViewProps:type"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "src/upload/view.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploadedVideoView",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@contember/react-ui-lib!UploadedVideoViewProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type UploadedVideoViewProps = "
            },
            {
              "kind": "Reference",
              "text": "FileUrlDataExtractorProps",
              "canonicalReference": "@contember/react-ui-lib!~FileUrlDataExtractorProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "GenericFileMetadataExtractorProps",
              "canonicalReference": "@contember/react-ui-lib!~GenericFileMetadataExtractorProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "VideoFileDataExtractorProps",
              "canonicalReference": "@contember/react-ui-lib!~VideoFileDataExtractorProps:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "BaseFileViewProps",
              "canonicalReference": "@contember/react-ui-lib!BaseFileViewProps:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/upload/view.tsx",
          "releaseTag": "Public",
          "name": "UploadedVideoViewProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@contember/react-ui-lib!UploaderDropzone:function(1)",
          "docComment": "/**\n * Props {@link UploaderDropzoneProps}\n *\n * `UploaderDropzone` renders a file drop area UI for uploading files, with optional placeholder customization and conditional display of a loader while uploads are in progress.\n *\n * Requires usage within an uploader context providing file upload state.\n *\n * - Displays a loader when uploads are active and `inactiveOnUpload` is `true` - Supports custom placeholder content via `dropzonePlaceholder`\n *\n * #### Example: Basic usage with custom placeholder\n * ```tsx\n * <UploaderDropzone\n *   inactiveOnUpload\n *   dropzonePlaceholder={<div>Drop files here or click to upload</div>}\n * />\n * ```\n *\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploaderDropzone: ({ inactiveOnUpload, dropzonePlaceholder }: "
            },
            {
              "kind": "Reference",
              "text": "UploaderDropzoneProps",
              "canonicalReference": "@contember/react-ui-lib!UploaderDropzoneProps:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "import(\"react/jsx-runtime\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!JSX.Element:interface"
            }
          ],
          "fileUrlPath": "src/upload/dropzone.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ inactiveOnUpload, dropzonePlaceholder }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "UploaderDropzone"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploaderDropzoneAreaUI:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploaderDropzoneAreaUI: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ClassAttributes",
              "canonicalReference": "@types/react!React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "HTMLAttributes",
              "canonicalReference": "@types/react!React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n} & {\n    size?: \"square\" | null | undefined;\n}, \"ref\"> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/upload/ui.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploaderDropzoneAreaUI",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@contember/react-ui-lib!UploaderDropzoneProps:type",
          "docComment": "/**\n * Props for {@link UploaderDropzone}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type UploaderDropzoneProps = "
            },
            {
              "kind": "Content",
              "text": "{\n    dropzonePlaceholder?: "
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    inactiveOnUpload?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/upload/dropzone.tsx",
          "releaseTag": "Public",
          "name": "UploaderDropzoneProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploaderDropzoneWrapperUI:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploaderDropzoneWrapperUI: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ClassAttributes",
              "canonicalReference": "@types/react!React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "HTMLAttributes",
              "canonicalReference": "@types/react!React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n}, \"ref\"> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/upload/ui.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploaderDropzoneWrapperUI",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploaderInactiveDropzoneUI:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploaderInactiveDropzoneUI: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ClassAttributes",
              "canonicalReference": "@types/react!React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "HTMLAttributes",
              "canonicalReference": "@types/react!React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n}, \"ref\"> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/upload/ui.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploaderInactiveDropzoneUI",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploaderItemUI:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploaderItemUI: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ClassAttributes",
              "canonicalReference": "@types/react!React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "HTMLAttributes",
              "canonicalReference": "@types/react!React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n}, \"ref\"> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/upload/ui.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploaderItemUI",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploaderRepeaterDragOverlayUI:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploaderRepeaterDragOverlayUI: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ClassAttributes",
              "canonicalReference": "@types/react!React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "HTMLAttributes",
              "canonicalReference": "@types/react!React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n}, \"ref\"> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/upload/ui.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploaderRepeaterDragOverlayUI",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploaderRepeaterHandleUI:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploaderRepeaterHandleUI: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ClassAttributes",
              "canonicalReference": "@types/react!React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLButtonElement",
              "canonicalReference": "!HTMLButtonElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ButtonHTMLAttributes",
              "canonicalReference": "@types/react!React.ButtonHTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLButtonElement",
              "canonicalReference": "!HTMLButtonElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n}, \"ref\"> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLButtonElement",
              "canonicalReference": "!HTMLButtonElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/upload/ui.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploaderRepeaterHandleUI",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploaderRepeaterItemsWrapperUI:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploaderRepeaterItemsWrapperUI: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ClassAttributes",
              "canonicalReference": "@types/react!React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "HTMLAttributes",
              "canonicalReference": "@types/react!React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n}, \"ref\"> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/upload/ui.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploaderRepeaterItemsWrapperUI",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@contember/react-ui-lib!UploaderRepeaterItemUI:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "UploaderRepeaterItemUI: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ForwardRefExoticComponent",
              "canonicalReference": "@types/react!React.ForwardRefExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ClassAttributes",
              "canonicalReference": "@types/react!React.ClassAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "HTMLAttributes",
              "canonicalReference": "@types/react!React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": "> & {\n    asChild?: boolean;\n    children?: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "ReactNode",
              "canonicalReference": "@types/react!React.ReactNode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    className?: string;\n}, \"ref\"> & import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "RefAttributes",
              "canonicalReference": "@types/react!React.RefAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            }
          ],
          "fileUrlPath": "src/upload/ui.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "UploaderRepeaterItemUI",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        }
      ]
    }
  ]
}
