import { DocsConfig } from './types'

const config: DocsConfig = {
	sourceDir: './packages/react-ui-lib/src',
	contextDir: '../packages/playground/admin',
	componentFilePattern: '**/*.tsx',
	outputDir: './docs/docs/reference/interface/ui-components',
	ai: {
		model: 'o3',
	},
	// externalProjects: [
	// 	{
	// 		path: 'path/to/project/admin',
	// 		name: 'Project name',
	// 		description: 'Project description to help AI understand the project',
	// 		excludeFolders: [
	// 			'lib', // You don't want to include the lib folder in the documentation
	// 			'dist',
	// 			'build',
	// 		],
	// 	},
	// ],
	externalProjects: [
		{
			path: '../../../contember-external/fabis/admin',
			name: 'Learning Platform',
			description: 'A learning platform built with Contember with a lot of features, including user management, course creation, and content organization.',
			excludeFolders: [
				'lib',
				'dist',
				'build',
			],
		},
		{
			path: '../../../108agency/mapeditor/admin',
			name: '108 Agency CRM and CMS',
			description: 'Content management system for a websites and a CRM',
			excludeFolders: [
				'lib',
				'dist',
				'build',
			],
		},
	],

	// Component-specific overrides
	// overrides: {
	// 	SelectField: {
	// 		title: 'SelectField (Entity Picker)',
	// 		notes: 'This component is optimized for selecting single related entities (hasOne). Avoid using it for complex data fetching scenarios directly.',
	// 	},
	// },
	excludeComponents: [
		'AlertDialogOverlay',
		'AlertDialogPortal',
		'AvatarImage',
		'BoardCardUI',
		'BoardColumnHandleUI',
		'BoardColumnHeaderUI',
		'BoardColumnUI',
		'BoardDragOverlayUI',
		'BoardItemHandleUI',
		'BoardItemsWrapperUI',
		'BoardNonSortableColumn',
		'BoardNonSortableItems',
		'BoardSortableColumn',
		'BoardSortableItems',
		'BoardWrapperUI',
		'buttonConfig',
		'ColumnDropIndicator',
		'DialogOverlay',
		'DialogPortal',
		'DropdownMenuSub',
		'DropdownMenuShortcut',
		'DropdownMenuCheckboxItem',
		'DropdownMenuSubContent',
		'DropdownMenuSub',
		'editorButtons',
		'inputConfig',
		'ItemDropIndicator',
		'MultiSelectItemWrapperUI',
		'OtpConfirmFormFields',
		'OtpPrepareFormFields',
		'ScrollBar',
		'SelectCreateNewTrigger',
		'SelectLabel',
		'SelectScrollDownButton',
		'SelectScrollUpButton',
		'SelectSeparator',
		'SheetClose',
		'SheetDescription',
		'SheetFooter',
		'SheetHeader',
		'SheetOverlay',
		'SheetPortal',
		'SheetTitle',
		'SidebarInput',
		'SidebarInsetContent',
		'SidebarInsetHeader',
		'SidebarInsetHeaderActions',
		'SidebarLayout',
		'SidebarInset',
		'SidebarMenuBadge',
		'sidebarMenuButtonVariants',
		'SidebarRail',
		'SidebarSeparator',
		'SidebarTrigger',
		'TableElementRenderer',
		'TableFooter',
		'TableCellElementRenderer',
		'TableRowElementRenderer',
		'TenantFormError',
		'TenantFormField',
		'TenantFormInput',
		'TenantFormLabel',
		'Toast',
		'ToastAction',
		'ToastDescription',
		'ToastTitle',
		'ToasterProvider',
		'toggleConfig',
		'uic',
		'uiconfig',
		'UnorderedListRenderer',
		'UploaderInactiveDropzoneUI',
		'UploaderRepeaterDragOverlayUI',
		'UploaderRepeaterDropIndicator',
		'UploaderRepeaterHandleUI',
		'UploaderRepeaterItemUI',
		'UploaderRepeaterItemsWrapperUI',
		'useIntrospectionRolesConfig',
		'useOnHighlight',
		'usePersistErrorHandler',
		'usePersistSuccessHandler',
		'usePersistFeedbackHandlers',
		'useToasts',
	],
}

export default config
