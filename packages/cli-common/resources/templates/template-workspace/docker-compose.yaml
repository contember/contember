version: '2.4'
services:
  contember:
    image: contember/engine:{version}
    restart: on-failure
    environment:
      NODE_ENV: 'development'

      CONTEMBER_ROOT_EMAIL: 'contember@localhost'
      CONTEMBER_ROOT_PASSWORD: 'contember'
      CONTEMBER_ROOT_TOKEN: '0000000000000000000000000000000000000000'
      CONTEMBER_LOGIN_TOKEN: '1111111111111111111111111111111111111111'
      CONTEMBER_CONFIG_YAML: |
        projectDefaults:
          s3:
            prefix: '%project.slug%'

      DEFAULT_DB_HOST: 'postgresql'
      DEFAULT_DB_PORT: '5432'
      DEFAULT_DB_USER: 'contember'
      DEFAULT_DB_PASSWORD: 'contember'
      DEFAULT_S3_BUCKET: 'contember'
      DEFAULT_S3_REGION: ''
      DEFAULT_S3_KEY: 'contember'
      DEFAULT_S3_SECRET: 'contember'
      DEFAULT_S3_PROVIDER: 'minio'

      TENANT_DB_NAME: 'tenant'
      TENANT_MAILER_HOST: 'mailhog'
      TENANT_MAILER_PORT: '1025'
      TENANT_MAILER_FROM: 'contember@localhost'

    depends_on:
      postgresql:
        condition: service_healthy

  admin:
    image: node:14-alpine
    command: npm run start-admin
    environment:
      VITE_CONTEMBER_ADMIN_SESSION_TOKEN: '0000000000000000000000000000000000000000'
      VITE_CONTEMBER_ADMIN_PROJECT_NAME: '{projectName}'
    volumes:
      - ./:/src
    working_dir: /src

  contember-cli:
    image: contember/cli:{version}
    scale: 0
    volumes:
      - ./:/src:cached
    working_dir: /src
    environment:
      CONTEMBER_API_URL: 'http://contember:4000/'
      CONTEMBER_API_TOKEN: '0000000000000000000000000000000000000000'
      CONTEMBER_PROJECT_NAME: '{projectName}'

  contember-migrations:
    image: contember/cli:{version}
    command: [ 'migrations:execute', '.', '--yes' ]
    volumes:
      - ./:/src:cached
    working_dir: /src
    environment:
      CONTEMBER_API_URL: 'http://contember:4000/'
      CONTEMBER_API_TOKEN: '0000000000000000000000000000000000000000'
      CONTEMBER_PROJECT_NAME: '{projectName}'
    depends_on:
      contember:
        condition: service_started

  postgresql:
    image: postgres:13-alpine
    environment:
      POSTGRES_PASSWORD: contember
      POSTGRES_USER: contember
      POSTGRES_DB: contember
    volumes:
      - pgsql-data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U contember' ]
      interval: 5s
      timeout: 5s
      retries: 10

  s3:
    image: minio/minio
    command: 'server /data'
    volumes:
      - s3-data:/data
      - ./scripts/minio/s3-policy.json:/bucket-policy.json
      - ./scripts/minio/s3-entrypoint.sh:/minio-entrypoint.sh
    entrypoint: /minio-entrypoint.sh
    environment:
      MINIO_ACCESS_KEY: contember
      MINIO_SECRET_KEY: contember

  mailhog:
    image: mailhog/mailhog

  adminer:
    image: michalhosna/adminer:4.8.0-en_v1
    depends_on:
      - postgresql
    environment:
      ADMINER_DRIVER: pgsql
      ADMINER_SERVER: postgresql
      ADMINER_DB: contember
      ADMINER_USERNAME: contember
      ADMINER_PASSWORD: contember
      ADMINER_AUTOLOGIN: 1
      ADMINER_NAME: Contember

volumes:
  pgsql-data: ~
  s3-data: ~
